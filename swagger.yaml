openapi: 3.0.0
info:  #contain general information
  title: learn express and swagger - LearnCodeOnline
  description: LCO - a course segment about writing docs
  version: 1.1.0
  contact:
   email: manish.info2020@gmail.com
   url: "manishgupta.netlify.app"

# servers:
#  - url: "https://localhost:4000/api/v1"
#    description: for local host - secure
#  - url: "https://localhost:4000/api/v1"
#    description: for local host - regular

servers:
 - url: "{protocol}://localhost:4000/api/{version}"
   description: for local host - secure
   variables:
    version:
     enum:  # enum is used to restricate options
       - v1
       - v2
     default: v1 #Default version set here
    protocol:
     enum:
       - http
       - https
     default: http #Default protocol set here

components:  # it contains authentication
 securitySchemes:
  cokkieAuth: 
    type: apiKey
    in: cookie
    name: token
  BearerAuth:
      type: http
      scheme: bearer

paths:  #contains all the routes
  /lco:
     get:
       tags:
        - String
       summary: returns a greet message from lco
       responses:
        200:
          description: All good and success
          content:
            application/json:
             schema:
              type: string
              example: "mystring"

        400:
          description: Bad request
        500:
          description: internal server error
  /lcoobject:
     get:
       tags:  # tags makes easier to find in list
        - Object
       summary: returns a unique course
       responses:
        200:
          description: All good and success
          content:
            application/json:
             schema:
              type: object
              properties:
               id:
                type: string
               name:
                type: string
               price:
                type: number

        400:
          description: Bad request
        500:
          description: internal server error
  /courses:
     get:
       tags:  # tags makes easier to find in list or group them together (same tags)
        - Array
       summary: returns a all courses
       responses:
        200:
          description: All good and success
          content:
            application/json:
             schema:
              type: array
              items:
               type: object
               properties:
                 id:
                  type: string
                 name:
                   type: string
                 price:
                   type: number

        400:
          description: Bad request
        500:
          description: internal server error
  /mycourse/{courseId}:
     get:
       tags:  # tags makes easier to find in list or group them together (same tags)
        - String
       summary: returns a courses based on request id
       parameters:  # used for sending parameters 
        - name: courseId
          in: path   # this is important for execution
          required: true
          default: 11
          schema:
            type: string      
       responses:
        200:
          description: All good and success
          content:
            application/json:
             schema:
               type: object
               properties:
                 id:
                  type: string
                 name:
                  type: string
                 price:
                  type: number

        400:
          description: Bad request
        500:
          description: internal server error
  /addCourses:
     post:
       tags:  # tags makes easier to find in list or group them together (same tags)
        - String
       summary: add a new course to existing courses
       consumes:
         - application/json
       produces:
         - application/json
       requestBody: 
        required: true
        content:
         application/json: 
           schema:
            type: object
            properties:
              id:
               type: string
              name:
               type: string
              price:
                type: number  
       responses:
        200:
          description: All good and success
          content:
            application/json:
             schema:
               type: boolean
        400:
          description: Bad request
        500:
          description: internal server error
  /courseupload:
     post:
       tags:  # tags makes easier to find in list or group them together (same tags)
        - String
       summary: uploading course images
       parameters:
        - in: header
          name: auth
       requestBody: 
        content:
         multipart/form-data: 
           schema:
            type: object
            properties:
              file: 
               type: string
               format: binary
       responses:
        200:
          description: All good and success
        400:
          description: Bad request
        500:
          description: internal server error
  /coursequery:
     post:
       tags:  # tags makes easier to find in list or group them together (same tags)
        - String
       summary: trying to learn 
       parameters:
         - name: location
            in: query
            required: true
            schema:
             type: string
             enum: [delhi, london , patna]
         - name: device
            in: query
            required: true
            schema:
             type: string
             enum: [web , mobile]  
     responses:
        200:
         description: All good and success
         content:
          application/json:
           schema:
              type: boolean
        400:
          description: Bad request
        500:
          description: internal server error




